name: Publish Java SDK

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to publish"
        required: true
        type: string

jobs:
  publish:
    name: Publish to Maven Central
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Java
        uses: actions/setup-java@v5
        with:
          java-version: 17
          distribution: "temurin"
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Setup GPG
        run: |
          # Store the GPG key in a file first
          echo "${{ secrets.GPG_PRIVATE_KEY }}" > /tmp/gpg_key.asc
          # Check if the file has content
          if [ ! -s /tmp/gpg_key.asc ]; then
            echo "ERROR: GPG_PRIVATE_KEY secret is empty or not set"
            exit 1
          fi
          echo "GPG key file size: $(wc -c < /tmp/gpg_key.asc) bytes"
          # Import the key
          gpg --batch --import /tmp/gpg_key.asc
          # Clean up
          rm /tmp/gpg_key.asc
          echo "default-key:$(gpg --list-keys --with-colons | grep '^pub' | head -1 | cut -d: -f5)" > ~/.gnupg/gpg.conf
        env:
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: Create Maven settings-security.xml
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings-security.xml << EOF
          <settingsSecurity>
            <master>${{ secrets.MAVEN_GPG_PASSPHRASE }}</master>
          </settingsSecurity>
          EOF

      - name: Update version
        run: |
          cd packages/java || exit 1
          # Update project version in pom.xml (only the main project version after tavo-java-sdk artifactId)
          sed -i '/<artifactId>tavo-java-sdk<\/artifactId>/{
              N
              s/<artifactId>tavo-java-sdk<\/artifactId>\n    <version>[^<]*<\/version>/<artifactId>tavo-java-sdk<\/artifactId>\n    <version>${{ inputs.version }}<\/version>/
          }' pom.xml

      - name: Build and test
        run: |
          cd packages/java || exit 1
          mvn clean verify

      - name: Publish to Maven Central
        run: |
          cd packages/java || exit 1
          mvn deploy -P release
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: Create Git tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag java-v${{ inputs.version }}
          git push origin java-v${{ inputs.version }}

      - name: Notify success
        run: |
          echo "âœ… Java SDK v${{ inputs.version }} published successfully!"
          echo "ðŸ“¦ Available on Maven Central: https://search.maven.org/artifact/net.tavoai/tavo-java-sdk/${{ inputs.version }}/jar"
