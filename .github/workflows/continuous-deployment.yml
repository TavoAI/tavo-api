name: Continuous Deployment

on:
  push:
    branches: [ main, develop ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  check-updates:
    name: Check for Updates
    runs-on: ubuntu-latest
    outputs:
      python_updated: ${{ steps.python.outputs.updated }}
      javascript_updated: ${{ steps.javascript.outputs.updated }}
      java_updated: ${{ steps.java.outputs.updated }}
      go_updated: ${{ steps.go.outputs.updated }}
      dotnet_updated: ${{ steps.dotnet.outputs.updated }}
      rust_updated: ${{ steps.rust.outputs.updated }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: 20

    - name: Check Python dependencies
      id: python
      run: |
        cd packages/python
        # Check if there are dependency updates
        pip list --outdated --format=json > outdated.json
        if [ -s outdated.json ]; then
          echo "updated=true" >> $GITHUB_OUTPUT
        else
          echo "updated=false" >> $GITHUB_OUTPUT
        fi

    - name: Check JavaScript dependencies
      id: javascript
      run: |
        cd packages/javascript
        npm outdated --json > outdated.json || true
        if [ -s outdated.json ] && [ "$(cat outdated.json)" != "{}" ]; then
          echo "updated=true" >> $GITHUB_OUTPUT
        else
          echo "updated=false" >> $GITHUB_OUTPUT
        fi

    - name: Check Java dependencies
      id: java
      run: |
        cd packages/java
        # Check Maven dependencies
        mvn versions:display-dependency-updates | grep -q "->" && echo "updated=true" >> $GITHUB_OUTPUT || echo "updated=false" >> $GITHUB_OUTPUT

    - name: Check Go dependencies
      id: go
      run: |
        cd packages/go
        go list -u -m all | grep -q "\[.*\]" && echo "updated=true" >> $GITHUB_OUTPUT || echo "updated=false" >> $GITHUB_OUTPUT

    - name: Check .NET dependencies
      id: dotnet
      run: |
        cd packages/dotnet
        dotnet list package --outdated | grep -q ">" && echo "updated=true" >> $GITHUB_OUTPUT || echo "updated=false" >> $GITHUB_OUTPUT

    - name: Check Rust dependencies
      id: rust
      run: |
        cd packages/rust
        cargo outdated | grep -q "Update" && echo "updated=true" >> $GITHUB_OUTPUT || echo "updated=false" >> $GITHUB_OUTPUT

  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    needs: check-updates
    if: needs.check-updates.outputs.python_updated == 'true' || needs.check-updates.outputs.javascript_updated == 'true' || needs.check-updates.outputs.java_updated == 'true' || needs.check-updates.outputs.go_updated == 'true' || needs.check-updates.outputs.dotnet_updated == 'true' || needs.check-updates.outputs.rust_updated == 'true'

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: 20

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Update Python dependencies
      if: needs.check-updates.outputs.python_updated == 'true'
      run: |
        cd packages/python
        pip install --upgrade pip
        pip install pip-tools
        pip-compile --upgrade
        pip install -r requirements.txt

    - name: Update JavaScript dependencies
      if: needs.check-updates.outputs.javascript_updated == 'true'
      run: |
        cd packages/javascript
        npm update
        npm audit fix || true

    - name: Update Java dependencies
      if: needs.check-updates.outputs.java_updated == 'true'
      run: |
        cd packages/java
        mvn versions:update-properties
        mvn versions:use-latest-versions

    - name: Update Go dependencies
      if: needs.check-updates.outputs.go_updated == 'true'
      run: |
        cd packages/go
        go get -u ./...
        go mod tidy

    - name: Update .NET dependencies
      if: needs.check-updates.outputs.dotnet_updated == 'true'
      run: |
        cd packages/dotnet
        dotnet list package --outdated
        # Manual update would be needed here

    - name: Update Rust dependencies
      if: needs.check-updates.outputs.rust_updated == 'true'
      run: |
        cd packages/rust
        cargo update

    - name: Run tests after updates
      run: |
        # Test all packages after dependency updates
        for pkg in packages/*; do
          if [ -f "$pkg/package.json" ]; then
            echo "Testing $pkg (npm)"
            cd $pkg && npm test && cd ../..
          elif [ -f "$pkg/pyproject.toml" ]; then
            echo "Testing $pkg (python)"
            cd $pkg && python -m pytest && cd ../..
          elif [ -f "$pkg/pom.xml" ]; then
            echo "Testing $pkg (maven)"
            cd $pkg && mvn test && cd ../..
          elif [ -f "$pkg/go.mod" ]; then
            echo "Testing $pkg (go)"
            cd $pkg && go test ./... && cd ../..
          elif [ -f "$pkg/TavoAI.csproj" ]; then
            echo "Testing $pkg (.NET)"
            cd $pkg && dotnet test && cd ../..
          elif [ -f "$pkg/Cargo.toml" ]; then
            echo "Testing $pkg (rust)"
            cd $pkg && cargo test && cd ../..
          fi
        done

    - name: Create pull request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "chore: update dependencies"
        title: "🤖 Automated Dependency Updates"
        body: |
          ## 🤖 Automated Dependency Updates

          This PR updates dependencies across all SDK packages.

          ### Updated Packages
          - ${{ needs.check-updates.outputs.python_updated == 'true' && '✅ Python' || '❌ Python' }}
          - ${{ needs.check-updates.outputs.javascript_updated == 'true' && '✅ JavaScript' || '❌ JavaScript' }}
          - ${{ needs.check-updates.outputs.java_updated == 'true' && '✅ Java' || '❌ Java' }}
          - ${{ needs.check-updates.outputs.go_updated == 'true' && '✅ Go' || '❌ Go' }}
          - ${{ needs.check-updates.outputs.dotnet_updated == 'true' && '✅ .NET' || '❌ .NET' }}
          - ${{ needs.check-updates.outputs.rust_updated == 'true' && '✅ Rust' || '❌ Rust' }}

          ### Testing
          All tests have passed after the dependency updates.
        branch: automated/dependency-updates
        delete-branch: true