name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  release:
    types: [ published ]

jobs:
  test:
    name: Test SDKs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: npm install

    - name: Bootstrap packages
      run: npm run bootstrap

    - name: Run linting
      run: npm run lint

    - name: Run tests
      run: npm run test

    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: false

  build:
    name: Build SDKs
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: npm install

    - name: Bootstrap packages
      run: npm run bootstrap

    - name: Build all packages
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: built-packages
        path: |
          packages/*/dist/
          packages/*/build/

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.event_name == 'release'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Bootstrap packages
      run: npm run bootstrap

    - name: Build packages
      run: npm run build

    - name: Publish Python SDK
      if: github.event.release.tag_name =~ /^python/
      run: |
        cd packages/python
        python -m pip install --upgrade pip
        pip install build twine
        python -m build
        twine upload dist/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}

    - name: Publish JavaScript SDK
      if: github.event.release.tag_name =~ /^js/
      run: |
        cd packages/javascript
        npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Publish Java SDK
      if: github.event.release.tag_name =~ /^java/
      run: |
        cd packages/java
        ./gradlew publish
      env:
        MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}

    - name: Publish Go SDK
      if: github.event.release.tag_name =~ /^go/
      run: |
        cd packages/go
        git tag ${GITHUB_REF#refs/tags/}
        git push origin ${GITHUB_REF#refs/tags/}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}